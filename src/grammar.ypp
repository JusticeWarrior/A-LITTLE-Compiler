
%code{
  #include <string>
  #include <stdint.h>
  #include "tokens.hpp"
  #include "scanner.hpp"
  #include "parser.hpp"

  #undef yylex
  #define yylex scanner.yylex

  #undef yyparse
  //#define yyparse LittleParser::yyparse
  //#undef yyerror
  //#define yyerror LittleParser::error

  //#undef YYPARSE_PARAM

  void yyerror (LittleParser& parser, LittleScanner& scanner, const char* err);
}

%parse-param {LittleParser& parser}
%parse-param {LittleScanner& scanner}


%union{
  double float_val;
  int int_val;
  char* str_val;
}

%token    <int_val> END
%token    <str_val> KEYWORD 
%token    <str_val> IDENTIFIER
%token    <str_val> FLOATLITERAL
%token    <int_val> INTLITERAL
%token    <str_val> STRINGLITERAL
%token    <str_val> OPERATOR
%token    <str_val> TRASH

%%
  stmt_list:
    | stmt_list stmt
    ;  
  stmt
    : KEYWORD
    | IDENTIFIER
    ;
%%

void yyerror(LittleParser& parser, LittleScanner& scanner, const char* error){
    return parser.error(error);
  }

